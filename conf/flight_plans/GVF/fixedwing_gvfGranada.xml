<?xml version="1.0"?>
<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">
<flight_plan alt="753" ground_alt="713" lat0="37.29745306" lon0="-3.68272961" max_dist_from_home="1500" name="Sonic2" security_height="25" home_mode_height="200" qfu="90" geofence_max_alt="3000" geofence_max_height="1000">
  <header>
static inline float wp_dist(float wp1_x, float wp1_y, float wp2_x, float wp2_y) {
  float dx = wp1_x - wp2_x;
  float dy = wp1_y - wp2_y;
  return sqrtf(dx*dx + dy*dy);
}
</header>
  <waypoints>
    <waypoint name="HOME" x="-0.648" y="-0.647"/>
    <waypoint alt="753" name="STDBY" x="-45.3105" y="45.252"/>
    <waypoint alt="753" name="ELLIPSE" x="-64.4723" y="64.9948"/>
    <waypoint alt="753" name="CLIMB" x="-33.488" y="-25.061"/>
    <waypoint alt="718" name="AF" x="-44.1543" y="-30.2445"/>
    <waypoint alt="718" name="TD" x="29.784" y="5.24597"/>
    <waypoint alt="723"name="_BASELEG" x="-58.3398" y="6.0045"/>

    <!-- Sectors waypoints -->
    <waypoint name="_N1" x="-84.7786" y="-76.0048"/>
    <waypoint name="_N2" x="65.464" y="-32.279"/>
    <waypoint name="_N3" x="-5.06613" y="161.245"/>
    <waypoint name="_N4" x="-140.982" y="107.628"/>
  </waypoints>
  
  <sectors>
    <sector name="FlightArea" color="red">
      <corner name="_N1"/>
      <corner name="_N2"/>
      <corner name="_N3"/>
      <corner name="_N4"/>
    </sector>
  </sectors>
  
  <variables>
    <variable var="a_stb" init="40.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="b_stb" init="40.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="land_rad" init="40.0" min="1.0" max="150.0" step="1.0"/>
  </variables>
  
  <modules>
    <module name="gvf_module">
      <define name="GVF_OCAML_GCS" value="FALSE"/>
    </module>
    <module name="gvf_parametric"/> 
  </modules>
  
  <blocks>
    <block name="Wait GPS" strip_icon="gps.png">
      <set value="1" var="autopilot.kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    
    <block name="Geo init" strip_icon="googleearth.png">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
    </block>
    
    <block name="Holding point">
      <set value="1" var="autopilot.kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>

    <!-- need this for simulation, manual takeoff for real testing -->
    <block key="t" name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png" group="home">
      <exception cond="GetPosAlt() @GT (ground_alt+45)" deroute="Standby"/>
      <set value="0" var="autopilot.kill_throttle"/>
      <set value="0" var="autopilot.flight_time"/>
      <set value="1" var="autopilot.launch"/>
      <go from="HOME" throttle="1.0" vmode="throttle" wp="CLIMB" pitch="15"/>
    </block>

    <block key="s" name="Standby" strip_button="Standby" strip_icon="home.png" group="home">
      <call_once fun="NavVerticalAutoThrottleMode(0.0)"/>
      <call_once fun="NavVerticalAltitudeMode(flight_altitude, 0.0)"/>
      <call fun="gvf_ellipse_wp(WP_STDBY, a_stb, b_stb, 0.0)"/>
    </block>
    
    <block name="ellipse_wp" strip_icon="oval.png">
      <call_once fun="NavVerticalAutoThrottleMode(0.0)"/>
      <call_once fun="NavVerticalAltitudeMode(flight_altitude, 0.0)"/>
      <call fun="gvf_ellipse_wp(WP_ELLIPSE, gvf_ellipse_par.a, gvf_ellipse_par.b, gvf_ellipse_par.alpha)"/>
    </block>

    <!--block name="2D_trefoil_wp" strip_icon="eight.png"> 
      <call fun="gvf_parametric_2D_trefoil_wp(WP_P1, gvf_parametric_2d_trefoil_par.w1, gvf_parametric_2d_trefoil_par.w2, gvf_parametric_2d_trefoil_par.ratio, gvf_parametric_2d_trefoil_par.r, gvf_parametric_2d_trefoil_par.alpha)"/>
    </block--->

    <!--block name="3D_ellipse_wp" strip_icon="oval.png">
	<call fun="gvf_parametric_3D_ellipse_wp(WP_ELLIPSE, gvf_parametric_3d_ellipse_par.r, gvf_parametric_3d_ellipse_par.zl, gvf_parametric_3d_ellipse_par.zh, gvf_parametric_3d_ellipse_par.alpha)"/>
    </block-->

    <!--block name="3D_lissajous_wp" strip_icon="eight.png"> 
      <call fun="gvf_parametric_3D_lissajous_wp_center(WP_P2, 100, gvf_parametric_3d_lissajous_par.cx, gvf_parametric_3d_lissajous_par.cy, gvf_parametric_3d_lissajous_par.cz, gvf_parametric_3d_lissajous_par.wx, gvf_parametric_3d_lissajous_par.wy, gvf_parametric_3d_lissajous_par.wz, gvf_parametric_3d_lissajous_par.dx, gvf_parametric_3d_lissajous_par.dy, gvf_parametric_3d_lissajous_par.dz, gvf_parametric_3d_lissajous_par.alpha)"/>
    </block-->
    
    <block name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png" group="land">
      <set value="land_rad" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    
    <block name="Land Left AF-TD" strip_button="Land left (wp AF-TD)" strip_icon="land-left.png" group="land">
      <set value="-land_rad" var="nav_radius"/>
      <deroute block="land"/>
    </block>

    <block name="land">
      <call_once fun="nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() @GT 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10) @AND (fabs(GetPosAlt() - WaypointAlt(WP__BASELEG)) @LT 10)" wp="_BASELEG"/>

    </block>
    
    <block name="final">
      <exception cond="GetAltRef() + 10 @GT GetPosAlt()" deroute="flare"/>
      <go from="AF" hmode="route" vmode="glide" wp="TD"/>
    </block>
    
    <block name="flare">
      <go approaching_time="0" from="AF" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
